{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/Cardlist.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","serviceWorker.js","index.js"],"names":["SearchBox","searchChange","className","onChange","type","placeholder","Card","name","email","id","alt","src","Cardlist","robots","map","user","i","key","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onInputChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"oOAaeA,G,MAXG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEpB,OAEE,yBAAKC,UAAU,OACd,2BAAOC,SAAUF,EAAcC,UAAU,mCAAmCE,KAAK,SAASC,YAAY,qBCO3FC,EAZF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAKC,EAAe,EAAfA,MAAMC,EAAS,EAATA,GAC1B,OACC,yBAAKP,UAAU,qDACd,yBAAKQ,IAAI,SAASC,IAAG,+BAA0BF,KAC/C,6BACC,4BAAKF,GACL,2BAAIC,MCoBOI,EAzBA,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAMhB,OAEC,6BAEEA,EAAOC,KAAI,SAACC,EAAKC,GACd,OACC,kBAAC,EAAD,CACAC,IAAKJ,EAAOG,GAAGP,GACfA,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,aCRVU,EATF,SAACC,GAEb,OACE,yBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACpEJ,EAAMK,WC4BIC,E,kDA7Bf,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAM,CACVC,UAAU,GAHM,E,8DAOAC,EAAMC,GACvBC,KAAKC,SACJ,CAAEJ,UAAU,M,+BAQb,OAFmBG,KAAKJ,MAAjBC,SAIL,gEAIOG,KAAKX,MAAMK,a,GAzBOQ,aCmEbC,E,kDA7Dd,aAAc,IAAD,8BACZ,gBAoBDC,cAAgB,SAACC,GAChB,EAAKJ,SAAS,CACbK,YAAaD,EAAME,OAAOC,SArB3B,EAAKZ,MAAM,CACVb,OAAQ,GACRuB,YAAa,IAJF,E,gEAWO,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GACL,OAAOA,EAASC,UAEhBF,MAAK,SAAAG,GACL,EAAKZ,SAAS,CAAClB,OAAQ8B,S,+BAWhB,IAAD,EAEsBb,KAAKJ,MAA3Bb,EAFA,EAEAA,OAAOuB,EAFP,EAEOA,YAERQ,EAAgB/B,EAAOgC,QAAO,SAAAC,GACnC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASZ,EAAYW,kBAGrD,OAAmB,IAAhBlC,EAAOoC,OAEP,uCAMH,yBAAK/C,UAAU,MACd,wBAAIA,UAAU,MAAd,iBACA,kBAAC,EAAD,CAAWD,aAAc6B,KAAKI,gBAC9B,kBAAC,EAAD,KACC,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAUrB,OAAQ+B,W,GAnDNZ,aCKEkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAEC,kBAAC,EAAD,OAGDC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtB,MAAK,SAAAuB,GACJA,EAAaC,gBAEdC,OAAM,SAAArC,GACLsC,QAAQtC,MAAMA,EAAMuC,a","file":"static/js/main.e1c43e97.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ( {searchChange} ) => {\r\n\r\n\treturn(\r\n\r\n\t\t\t<div className='pa2'>\r\n\t\t\t\t<input onChange={searchChange} className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='search robots' /> \r\n\t\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ( {name,email,id} ) => {\r\n\treturn(\r\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw-2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h3>{name}</h3>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist=({robots})=> {\r\n\r\n\tif (false) {\r\n\t\tthrow new Error('Nooooooo!!!');\r\n\t}\r\n\r\n\treturn(\r\n\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user,i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\t\tkey={robots[i].id} \r\n\t\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\t\t\t\temail={robots[i].email} />\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Scroll=(props) => {\r\n\r\n\treturn(\r\n\t\t\t<div style={ {overflowY: 'scroll', border: '3px solid black', height: '800px'} }>\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Scroll;\r\n//in const function mehtod this.props is not required only props is enough","import React ,{ Component } from 'react';\r\n\r\n\r\nclass ErrorBoundary extends Component{\r\n\r\nconstructor(props){\r\n\tsuper(props)\r\n\tthis.state={\r\n\t\thasError: false\r\n\t}\r\n}\r\n\r\ncomponentDidCatch(error,info){\r\n\tthis.setState(\r\n\t\t{ hasError: true }\r\n\t\t)\r\n}\r\n\r\nrender(){\r\n\r\n\tconst {hasError} = this.state;\r\n\r\n\tif(hasError){\r\n\t\treturn (\r\n\t\t\t<h1>Ooops!!! There Is Some Error!!! </h1>\r\n\t\t\t);\r\n\t}\r\n\telse{\r\n\t\treturn( this.props.children ); //in class method this.props is required only props is not enough\r\n\t}\r\n}\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React,{ Component } from 'react';\r\nimport './App.css';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Cardlist from '../components/Cardlist';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component{\r\n\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots: [],\r\n\t\t\tsearchField: ''\r\n\t\t}\r\n\t}\r\n\r\n\t//first constructor will run then render then componentdidmount will run\r\n\t//and in componentdidmount we update the state the render will also run again\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>{\r\n\t\t\treturn response.json();\t//here return statement is neccessary  bcoz its return the response to the users in next .then\r\n\t\t})\r\n\t\t.then(users => {\r\n\t\t\tthis.setState({robots: users})\r\n\t\t});\r\n\t}\r\n\r\n\tonInputChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tsearchField: event.target.value\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst {robots,searchField} = this.state;\r\n\r\n\t\tconst filteredRobots= robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t})\r\n\r\n\t\t\tif(robots.length===0){ //we can also use !robots.length bcoz 0 is false and other than 0 is true\r\n\t\t\t\treturn(\r\n\t\t\t\t\t\t<h1>Loading</h1>\r\n\t\t\t\t\t);\r\n\t\t\t}else{\r\n\r\n\t\t\t\treturn(\r\n\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'> RoboFriends </h1>\r\n\t\t\t\t<SearchBox searchChange={this.onInputChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<Cardlist robots={filteredRobots} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t\t\t}\r\n\r\n\t}\r\n\t\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n \n  \t<App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}